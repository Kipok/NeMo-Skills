# Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

defaults:
  - optional tp_overlap@model.ub_tp_comm_overlap_cfg:

trainer:
  num_nodes: 1
  devices: 1
  accelerator: gpu
  precision: bf16

  # dpo specific args
  dpo:
    max_epochs: 1
    max_steps: -1
    val_check_interval: 0.5
    save_interval: 100
    limit_train_batches: 1.0

    # how many GBS we loop over
    limit_val_batches: 1
    gradient_clip_val: 1.0

  # do not change these
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  use_distributed_sampler: False
  max_time: null
  max_epochs: ${.dpo.max_epochs}
  max_steps: ${.dpo.max_steps}

exp_manager:
  explicit_log_dir: null
  exp_dir: null
  name: megatron_gpt
  max_time_per_run: ${trainer.max_time}
  create_wandb_logger: False
  wandb_logger_kwargs:
    project: null
    name: null
  resume_if_exists: True
  resume_ignore_no_checkpoint: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: val_loss
    save_top_k: 50
    mode: min
    always_save_nemo: False # saves nemo file during validation, not implemented for model parallel
    save_nemo_on_train_end: False # not recommended when training large models on clusters with short time limits
    filename: 'megatron_gpt--{${.monitor}:.3f}-{step}-{consumed_samples}-{epoch}'
    model_parallel_size: ${multiply:${model.tensor_model_parallel_size}, ${model.pipeline_model_parallel_size}}

pretrained_checkpoint:
  restore_from_path: null

model:
  mcore_gpt: True
  micro_batch_size: 1
  global_batch_size: 256
  megatron_amp_O2: True
  precision: bf16
  sequence_parallel: False
  dist_ckpt_format: zarr

  dpo:
    # This default value ensures there are no numeric differences beween trained and reference policies when computing log probs.
    # A higher value can be used to speed-up log probs computations, but may cause numeric differences.
    log_prob_forward_micro_batch_size: ${multiply:${model.micro_batch_size}, 2}
    ref_policy_kl_penalty: 0.2
    preference_average_log_probs: False # whether normalizing log probs according to the sequence length in preference_loss
    sft_average_log_probs: ${.preference_average_log_probs} # whether normalizing log probs according to the sequence length in sft_loss
    gt_reward_scale: 1. # the scale of the rewards in RPO
    preference_loss: dpo # the preference loss, we support dpo, ipo, rpo_sq, rpo_bwd_kl, rpo_fwd_kl
    preference_loss_weight: 1 # the coefficient of the preference loss
    sft_loss_weight: 0 # the coefficient of the SFT loss

  #encoder_seq_length: 4096
  #max_position_embeddings: ${model.encoder_seq_length}

  # miscellaneous
  seed: 1234

  #peft
  peft:
    peft_scheme: "none"  # ["lora", "none"]
    restore_from_path: null
    restore_from_ckpt:
      checkpoint_dir: null
      checkpoint_name: null

    lora_tuning:
      target_modules: ['attention_qkv'] # this can either be 'attention_qkv','attention_dense','mlp_fc1','mlp_fc2', 'attention' (qkv & dense), 'mlp' (fc1 & fc2), 'all'
      adapter_dim: 32
      adapter_dropout: 0.0
      column_init_method: 'xavier' # IGNORED if linear_adapter is used, options: xavier, zero or normal
      row_init_method: 'zero' # IGNORED if linear_adapter is used, options: xavier, zero or normal
      layer_selection:  null  # selects in which layers to add lora adapters. e.g. [1,12] will add lora to layer 1 (lowest) and 12. null will apply adapters to all layers
      weight_tying: False
      position_embedding_strategy: null # used only when weight_tying is True

  optim:
    name: distributed_fused_adam
    bucket_cap_mb: 200
    overlap_grad_sync: False
    contiguous_grad_buffer: True
    lr: 9e-6
    weight_decay: 0.1
    betas:
    - 0.9
    - 0.98
    sched:
      name: CosineAnnealing
      warmup_steps: 10
      constant_steps: 1000
      min_lr: 9e-7

  data:
    data_impl: jsonl
    splits_string: null
    seq_length: ${model.encoder_seq_length}
    skip_warmup: True
    num_workers: 0
    dataloader_type: single # cyclic
    reset_position_ids: False # Reset position ids after end-of-document token
    reset_attention_mask: False # Reset attention mask after end-of-document token
    eod_mask_loss: False # Mask loss for the end of document tokens
    index_mapping_dir: null # path to save index mapping .npy files, by default will save in the same location as data_prefix
    default_chosen_reward: 1. # the default reward for the chosen response in RPO
    default_rejected_reward: 0. # the default reward for the rejected response in RPO
    data_prefix:
      train: ???
      validation: ???
      test: ???

  # define fields from the base model's config that should be ignored when merging with this config.
  overwrite_base_config:
    data:
      data_prefix: True

precision: ${trainer.precision}